<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-http-grease-00" category="info">

  <front>
    <title>Greasing HTTP</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2020"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>Like many network protocols, HTTP is vulnerable to ossification of its extensibility points. This draft specifies how they should be exercised (‘greased’) to assure their continued usability.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/http-grease">https://github.com/mnot/I-D/labels/http-grease</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/http-grease/">https://mnot.github.io/I-D/http-grease/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/http-grease">https://github.com/mnot/I-D/commits/gh-pages/http-grease</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-http-grease/">https://datatracker.ietf.org/doc/draft-nottingham-http-grease/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Like many network protocols, HTTP is vulnerable to ossification of its extensibility points. Those that are rarely exercised risk ‘rusting shut’ because recipients assume that they will not be used. This happens in practice for several reasons, including implementer convenience, performance optimisation, or traffic characterisation.</t>

<t>Because extensibility is a primary mechanism for protocol evolution, it is important to keep these extension points flexible. For points that are rarely used, one proven way (pioneered by <xref target="RFC8701"/>) to assure this is through sending ‘grease’ values – i.e., extension values that are hard to predict and have no effect on correct protocol operation.</t>

<t>This document specifies how HTTP’s extension points should be greased, to assure their continued usability. It focuses on generic HTTP features; other documents cover versioned extensibility points (e.g., see <xref target="I-D.bishop-httpbis-grease"/>).</t>

<section anchor="what-to-grease" title="What to Grease?">

<t>HTTP has several extension mechanisms. While keeping all of them available for use is desirable, this document currently targets two specific extensibility points - HTTP request header fields and request cache directives - for a few reasons.</t>

<t>Some extension points are not practical to grease. For example, introducing new HTTP methods is important, but greasing them would require sending requests beyond those intended by the user. Beyond the overhead of doing so, failure of those requests is not likely to create an incentive to allow those requests, because that failure is not user visible.</t>

<t>Other extension points are already effectively ossified: for example, range units. While it might be possible to introduce a new range unit in the future (with enough effort), there is not much desire to do so in the community at this point, and the risk of greasing it causing too many failures is high.</t>

<t>Greasing aspects of HTTP responses (such as header fields or cache control directives) is not addressed in this document because current Web traffic already effectively greases them. For example, the breadth of unrecognised headers sent from HTTP servers effectively keeps response header fields greased; likewise with response cache-control directives.</t>

<t>Future revisions might address other extensibility points (including those listed above), based upon discussion and feedback.</t>

</section>
<section anchor="how-to-grease" title="How to Grease?">

<t>Greasing has the goal of keeping protocol extension points flexible – that is, it should remain possible to introduce new values with negligible risk of interoperability problems. By necessity, this is not absolute; an implementation determined to control input values can anticipate grease values and allow them, while denying other extensions.</t>

<t>As a result, one of the tradeoffs in a greasing mechanism is between making the values difficult to anticipate and the complexity of the mechanism. One that is hard to anticipate typically requires hard-to-predict values generated by an algorithm, with a corresponding prohibition on registration of those values. Even then, a determined implementation could use heuristics to identify and allow grease values, while blocking others. On the other hand, an easily predictable value can be added to an allow list in implementations, while they still block unknown values.</t>

<t>This document’s initial goal is to make it possible to deploy new standards-defined values with a suitable notice period, rather than to allow any implementation to introduce new values at any time. To meet that goal, a ‘HTTP grease process’ is defined, whereby grease values are periodically announced and later sent by implementations, so that receiving implementations have enough time to assure interoperability.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="process" title="The HTTP Grease Process">

<t>There are a few parties involved in the greasing of an HTTP extensibility point. They are:</t>

<t><list style="symbols">
  <t>Grease senders - implementers and operators of HTTP deployments that send grease extensions</t>
  <t>Grease recipients - implementers and operators of HTTP deployments that receive grease extensions</t>
  <t>The grease coordinator - a person appointed to oversee the HTTP grease process</t>
</list></t>

<t>To aid communication between these parties, a mailing list (TBD) has been created for announcements and discussion.</t>

<t>The grease coordinator is appointed by the ART Area Director(s), in consultation with the HTTP Working Group chair(s).</t>

<t>On a periodic basis (to be determined by the grease coordinator in consultation with grease senders and grease recipients), the grease coordinator will announce a new grease value for the extension points covered by this process. Where possible, these values will be provisionally registered with IANA, with the note ‘grease value’ and a reference to this specification.</t>

<t>Such announcements MUST contain the details of the grease value (see individual requirements below), and a date on which grease senders SHOULD start sending that value.</t>

<t>Grease senders SHOULD send the grease value on a sizeable fraction of traffic (e.g., 1/8th); too small a proportion might be ignored.</t>

<t>Grease senders MAY selectively send grease values. For example, a Web browser might only send grease on navigation requests, to assure that any interoperability problems are clearly visible.</t>

<t>Grease senders SHOULD NOT send grease values when the request method is non-idempotent or unsafe.</t>

<t>If grease senders or recipients experience widespread interoperability problems as the result of deployment of a grease value, they SHOULD report this to the grease coordinator, who MAY declare that the grease value can be withdrawn by grease senders. Grease senders SHOULD NOT act unilaterally in such cases.</t>

<t>Once a new grease value has been deployed, old grease values SHOULD be withdrawn by grease senders.</t>

<section anchor="greasing-http-request-header-fields" title="Greasing HTTP Request Header Fields">

<t>Grease values for HTTP request header fields consist of a field name and a field value.</t>

<t>Grease field names SHOULD be hard to predict; e.g., they SHOULD NOT have any identifying prefix, suffix, or pattern. However, they MUST NOT be likely to conflict with unregistered or future field names, and the grease coordinator MUST avoid potentially offensive or confusing terms. They also MUST conform to the syntactic requirements for field names in HTTP ({!I-D.ietf-httpbis-semantics}, Section 4.3).</t>

<t>This can be achieved in different ways (which SHOULD vary from time to time), for example:</t>

<t><list style="symbols">
  <t>Combine two or three dictionary words or proper nouns with a hyphen (e.g., ‘Skateboard-Clancy’, ‘Murray-Fortnight-Scout’)</t>
  <t>Append digits to a dictionary word (e.g., ‘Turnstile23’)</t>
  <t>Generate a string using a hash or similar function (e.g., ‘dd722785c01b’)</t>
</list></t>

<t>Grease field values can be statically specified in the grease announcement, specified to be of a certain type (e.g., using {?I-D.ietf-httpbis-header-structure} types), or left to the discretion of the grease sender.</t>

</section>
<section anchor="greasing-http-request-cache-directives" title="Greasing HTTP Request Cache Directives">

<t>Grease values for HTTP request cache directives consist of a directive name and an optional directive value.</t>

<t>Grease directive names SHOULD be hard to predict; e.g., they SHOULD NOT have any identifying prefix, suffix, or pattern. However, they MUST NOT be likely to conflict with unregistered or future directive names, and the grease coordinator MUST avoid potentially offensive or confusing terms. They also MUST conform to the syntactic requirements for cache directive names in HTTP ({!I-D.ietf-httpbis-cache}, Section 5.2).</t>

<t>This can be achieved in different ways (which SHOULD vary from time to time), for example:</t>

<t><list style="symbols">
  <t>Select a single dictionary word or proper noun (e.g., ‘fanciful’, ‘imagine’)</t>
  <t>Combine two dictionary words or proper nouns with a hyphen (e.g., ‘skateboard-clancy’)</t>
  <t>Append digits to a dictionary word (e.g., ‘turnstile23’)</t>
  <t>Generate a string using a hash or similar function (e.g., ‘dd722785c01b’)</t>
</list></t>

<t>Grease field values can be omitted (so there is no ‘=value’), statically specified in the grease announcement, specified to be of a certain type (e.g., an integer, a quoted string), or left to the discretion of the grease sender.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Some HTTP extensibility points are becoming (or have become) ossified because of security considerations; receiving implementations believe that it is more secure to reject unknown values, or they are able to identify undesirable peers through their use of extensions.</t>

<t>This document does not directly address these concerns, nor does it directly disallow such behaviour. Instead, it aims to encourage the ability to accommodate new extensions more quickly than is now currently possible.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC8701" target='https://www.rfc-editor.org/info/rfc8701'>
<front>
<title>Applying Generate Random Extensions And Sustain Extensibility (GREASE) to TLS Extensibility</title>
<author initials='D.' surname='Benjamin' fullname='D. Benjamin'><organization /></author>
<date year='2020' month='January' />
<abstract><t>This document describes GREASE (Generate Random Extensions And Sustain Extensibility), a mechanism to prevent extensibility failures in the TLS ecosystem. It reserves a set of TLS protocol values that may be advertised to ensure peers correctly handle unknown values.</t></abstract>
</front>
<seriesInfo name='RFC' value='8701'/>
<seriesInfo name='DOI' value='10.17487/RFC8701'/>
</reference>



<reference anchor="I-D.bishop-httpbis-grease">
<front>
<title>GREASE for HTTP/2</title>

<author initials='M' surname='Bishop' fullname='Mike Bishop'>
    <organization />
</author>

<date month='May' day='24' year='2018' />

<abstract><t>Reserves several values in the HTTP/2 registries to exercise the requirement that clients and servers ignore unknown values.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-bishop-httpbis-grease-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-bishop-httpbis-grease-00.txt' />
</reference>




    </references>


<section anchor="bootstrapping-the-http-grease-process" title="Bootstrapping the HTTP Grease Process">

<t>Because the initial focus of this document is on two request extension points, the relevant grease senders will be HTTP clients – a combination of Web browsers, HTTP client libraries and intermediaries (such as CDNs). The relevant grease recipients will be HTTP servers (both on the origin and in intermediaries).</t>

<t>Broadly speaking, HTTP servers accept these extensions, unless they have a Web Application Firewall (WAF) installed. As such, greasing HTTP successfully will require client implementers, WAF vendors, and in some cases WAF deployers to work together.</t>

<t>Clients are likely to be risk-averse; if their implementation alone breaks some Web sites, they can face negative consequences (because their users can easily flee to other implementations). Therefore, a successful greasing strategy needs to include most or all major clients, and their actions need to be coordinated.</t>

<t>WAF vendors and deployers often do not coordinate behaviour, and may not have prompt update mechanisms. Therefore, a successful greasing strategy needs to attract them to into community engagement (e.g., using the mailing list above) and needs to accommodate their needs; it is likely they will not be able to deploy updates quickly at first, for example.</t>

<t>As a result, when greasing begins, it will be necessary to have long lead times between announcement and sending. Likewise, initial grease values are more likely to succeed (building confidence and engagement) if they are static and simple.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIADuy8l4AA9Vaa28bR5b9zl9R43yQFJCU7ckgGXl3Z2XJjgX4kbUVBIvF
Iih2F8kadXdxqrpJcwL/9znnVlV3k5Kd2QDB7hqwRLG7q27de+65r57NZpPW
tpW5UN97o4NtVurV7e0PE71YeLO9mJSuaHSNy6XXy3bWuLbFPWtdz9Ztu5mt
+JCZPX48KXWLu54+fvp4UuDjyvn9hbLN0k0mduMvVOu70D59/PjPj59ONJ7C
hqYxXleTnfN3K++6zcXkzuzxV3mhbprW+Ma0s2tuO5mEVjflz7pyDTbZmzDZ
2Av1X60rpgo/bFOapp2q4HzrzTLg075OH1pvC1wqXL3R6UONm3HJNpVtzH9P
Jrpr185fTNRsovDPNuFCvZmrt/1Z5euohjfa3x1fcX6lG/t33VrXXMg3pta2
ulA11PXv/DHHUeRC5yE3NRcuzs93u908Xz2fTBrna6yxNVzj/curp0+e/PkC
2oMO+wuTyWw2U3qBY+E0k8lre2dUrZu9whpUpNp4B424CgekIZUNattV1PSi
MlCWciHYpS1EWuWWyrZBmY+taYJd2Mq2e7VxFgqaq9s1Hha7q7AxBZ4yQa3d
TrVrs1dh7bqqVAuDp40vbDClOj2JgChPzriVDqHzhrdbD8U3UFqHu7qg407z
dB7owPz8lj9a9/N7o0vjw2TyNXSgXlzf3L57f6E2FddV3tRuyxUhWTCFnGFh
oCCjNt2iSsf6ejK5XRscPXSQuLKhVbglPhXPU2g+h2+7plS6Vf+SbbKy7bpb
zIGSc5rm/GZ2fV7phanC+Qjw/zaPO9QOS3tTAFDq1C2hxKnqGpEkrE15lnbD
tuM9xOZpI+tki9Ha51z8fVyzWOtmhSPAYeQY5teFJb5h0vPVerbRePZY7A/G
KF0FR6tE8U6CKjrvuR/crO0CPECu3ry4fang15pguzN+is0n/eajC3Nr2uUc
bnAOujj/ElPI4Wjy2pZlZSaTr+jq3pWd2PJ3B7QLBA90SI16/Kj2I/h6G+7U
CYmKPBjWXXsClBS6E+QVdmPJHALrOq0jrrCzVUUQE1K4t0yus9abDaSgOjd0
V1sYwWEwWxKfokZcI0xUVF3JPW0NoJOfjDjM1jTYsjBTtTFeaAB/KLdpbW2D
HHiqCGxoHBogXLiP8ekidP08iX+oEAISMtla+72qDWFmQy3CZXUrs3VVF7ew
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
yYI+LQAA

-->

</rfc>

