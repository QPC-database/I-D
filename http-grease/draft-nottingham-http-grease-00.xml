<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-http-grease-00" category="info">

  <front>
    <title>Greasing HTTP</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2020"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>Like many network protocols, HTTP is vulnerable to ossification of its extensibility points. This draft specifies how they should be exercised (‘greased’) to assure their continued usability.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/http-grease">https://github.com/mnot/I-D/labels/http-grease</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/http-grease/">https://mnot.github.io/I-D/http-grease/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/http-grease">https://github.com/mnot/I-D/commits/gh-pages/http-grease</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-http-grease/">https://datatracker.ietf.org/doc/draft-nottingham-http-grease/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Like many network protocols, HTTP is vulnerable to ossification of its extensibility points. Those that are rarely exercised risk ‘rusting shut’ because recipients assume that they will not be used. This happens in practice for several reasons, including implementer convenience, performance optimisation, or traffic characterisation.</t>

<t>Because extensibility is a primary mechanism for protocol evolution, it is important to keep these extension points flexible. For points that are rarely used, one proven way (pioneered by <xref target="RFC8701"/>) to assure this is through sending ‘grease’ values – i.e., extension values that are hard to predict and have no effect on correct protocol operation.</t>

<t>This document specifies how HTTP’s extension points should be greased, to assure their continued usability. It focuses on generic HTTP features; other documents cover versioned extensibility points (e.g., see <xref target="I-D.bishop-httpbis-grease"/>).</t>

<section anchor="what-to-grease" title="What to Grease?">

<t>HTTP has several extension mechanisms. While keeping all of them available for use is desirable, this document currently targets two specific extensibility points - HTTP request header fields and request cache directives - for a few reasons.</t>

<t>Some extension points are not practical to grease. For example, introducing new HTTP methods is important, but greasing them would require sending requests beyond those intended by the user. Beyond the overhead of doing so, failure of those requests is not likely to create an incentive to allow those requests, because that failure is not user visible.</t>

<t>Other extension points are already effectively ossified: for example, range units. While it might be possible to introduce a new range unit in the future (with enough effort), there is not much desire to do so in the community at this point, and the risk of greasing it causing too many failures is high.</t>

<t>Greasing aspects of HTTP responses (such as header fields or cache control directives) is not addressed in this document because current Web traffic already effectively greases them. For example, the breadth of unrecognised headers sent from HTTP servers effectively keeps response header fields greased; likewise with response cache-control directives.</t>

<t>Future revisions might address other extensibility points (including those listed above), based upon discussion and feedback.</t>

</section>
<section anchor="how-to-grease" title="How to Grease?">

<t>Greasing has the goal of keeping protocol extension points flexible – that is, it should remain possible to introduce new values with negligible risk of interoperability problems. By necessity, this is not absolute; an implementation determined to control input values can anticipate grease values and allow them, while denying other extensions.</t>

<t>As a result, one of the tradeoffs in a greasing mechanism is between making the values difficult to anticipate and the complexity of the mechanism. One that is hard to anticipate typically requires hard-to-predict values generated by an algorithm, with a corresponding prohibition on registration of those values. Even then, a determined implementation could use heuristics to identify and allow grease values, while blocking others. On the other hand, an easily predictable value can be added to an allow list in implementations, while they still block unknown values.</t>

<t>This document’s initial goal is to make it possible to deploy new standards-defined values with a suitable notice period, rather than to allow any implementation to introduce new values at any time. To meet that goal, a ‘HTTP grease process’ is defined, whereby grease values are periodically announced and later sent by implementations, so that receiving implementations have enough time to assure interoperability.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="process" title="The HTTP Grease Process">

<t>There are a few parties involved in the greasing of an HTTP extensibility point. They are:</t>

<t><list style="symbols">
  <t>Grease senders - implementers and operators of HTTP deployments that send grease extensions</t>
  <t>Grease recipients - implementers and operators of HTTP deployments that receive grease extensions</t>
  <t>The grease coordinator - a person appointed to oversee the HTTP grease process</t>
</list></t>

<t>To aid communication between these parties, a mailing list (TBD) has been created for announcements and discussion.</t>

<t>The grease coordinator is appointed by the ART Area Director(s), in consultation with the HTTP Working Group chair(s).</t>

<t>On a periodic basis (to be determined by the grease coordinator in consultation with grease senders and grease recipients), the grease coordinator will announce a new grease value for the extension points covered by this process. Where possible, these values will be provisionally registered with IANA, with the note ‘grease value’ and a reference to this specification.</t>

<t>Such announcements MUST contain the details of the grease value (see individual requirements below), and a date on which grease senders SHOULD start sending that value.</t>

<t>Grease senders SHOULD send the grease value on a sizeable fraction of traffic (e.g., 1/8th); too small a proportion might be ignored.</t>

<t>Grease senders MAY selectively send grease values. For example, a Web browser might only send grease on navigation requests, to assure that any interoperability problems are clearly visible.</t>

<t>Grease senders SHOULD NOT send grease values when the request method is non-idempotent or unsafe.</t>

<t>If grease senders or recipients experience widespread interoperability problems as the result of deployment of a grease value, they SHOULD report this to the grease coordinator, who MAY declare that the grease value can be withdrawn by grease senders. Grease senders SHOULD NOT act unilaterally in such cases.</t>

<t>Once a new grease value has been deployed, old grease values SHOULD be withdrawn by grease senders.</t>

<section anchor="greasing-http-request-header-fields" title="Greasing HTTP Request Header Fields">

<t>Grease values for HTTP request header fields consist of a field name and a field value.</t>

<t>Grease field names SHOULD be hard to predict; e.g., they SHOULD NOT have any identifying prefix, suffix, or pattern. However, they MUST NOT be likely to conflict with unregistered or future field names, and the grease coordinator MUST avoid potentially offensive or confusing terms. They also MUST conform to the syntactic requirements for field names in HTTP (<xref target="I-D.ietf-httpbis-semantics"/>, Section 4.3).</t>

<t>This can be achieved in different ways (which SHOULD vary from time to time), for example:</t>

<t><list style="symbols">
  <t>Combine two or three dictionary words or proper nouns with a hyphen (e.g., ‘Skateboard-Clancy’, ‘Murray-Fortnight-Scout’)</t>
  <t>Append digits to a dictionary word (e.g., ‘Turnstile23’)</t>
  <t>Generate a string using a hash or similar function (e.g., ‘dd722785c01b’)</t>
</list></t>

<t>Grease field values can be statically specified in the grease announcement, specified to be of a certain type (e.g., using <xref target="I-D.ietf-httpbis-header-structure"/> types), or left to the discretion of the grease sender.</t>

</section>
<section anchor="greasing-http-request-cache-directives" title="Greasing HTTP Request Cache Directives">

<t>Grease values for HTTP request cache directives consist of a directive name and an optional directive value.</t>

<t>Grease directive names SHOULD be hard to predict; e.g., they SHOULD NOT have any identifying prefix, suffix, or pattern. However, they MUST NOT be likely to conflict with unregistered or future directive names, and the grease coordinator MUST avoid potentially offensive or confusing terms. They also MUST conform to the syntactic requirements for cache directive names in HTTP (<xref target="I-D.ietf-httpbis-cache"/>, Section 5.2).</t>

<t>This can be achieved in different ways (which SHOULD vary from time to time), for example:</t>

<t><list style="symbols">
  <t>Select a single dictionary word or proper noun (e.g., ‘fanciful’, ‘imagine’)</t>
  <t>Combine two dictionary words or proper nouns with a hyphen (e.g., ‘skateboard-clancy’)</t>
  <t>Append digits to a dictionary word (e.g., ‘turnstile23’)</t>
  <t>Generate a string using a hash or similar function (e.g., ‘dd722785c01b’)</t>
</list></t>

<t>Grease field values can be omitted (so there is no ‘=value’), statically specified in the grease announcement, specified to be of a certain type (e.g., an integer, a quoted string), or left to the discretion of the grease sender.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Some HTTP extensibility points are becoming (or have become) ossified because of security considerations; receiving implementations believe that it is more secure to reject unknown values, or they are able to identify undesirable peers through their use of extensions.</t>

<t>This document does not directly address these concerns, nor does it directly disallow such behaviour. Instead, it aims to encourage the ability to accommodate new extensions more quickly than is now currently possible.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor="I-D.ietf-httpbis-semantics">
<front>
<title>HTTP Semantics</title>

<author initials='R' surname='Fielding' fullname='Roy Fielding'>
    <organization />
</author>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<author initials='J' surname='Reschke' fullname='Julian Reschke'>
    <organization />
</author>

<date month='May' day='26' year='2020' />

<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines the semantics of HTTP: its architecture, terminology, the "http" and "https" Uniform Resource Identifier (URI) schemes, core request methods, request header fields, response status codes, response header fields, and content negotiation.  This document obsoletes RFC 2818, RFC 7231, RFC 7232, RFC 7233, RFC 7235, RFC 7538, RFC 7615, RFC 7694, and portions of RFC 7230.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-semantics-08' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-semantics-08.txt' />
</reference>



<reference anchor="I-D.ietf-httpbis-cache">
<front>
<title>HTTP Caching</title>

<author initials='R' surname='Fielding' fullname='Roy Fielding'>
    <organization />
</author>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<author initials='J' surname='Reschke' fullname='Julian Reschke'>
    <organization />
</author>

<date month='May' day='26' year='2020' />

<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.  This document obsoletes RFC 7234.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-cache-08' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-cache-08.txt' />
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC8701" target='https://www.rfc-editor.org/info/rfc8701'>
<front>
<title>Applying Generate Random Extensions And Sustain Extensibility (GREASE) to TLS Extensibility</title>
<author initials='D.' surname='Benjamin' fullname='D. Benjamin'><organization /></author>
<date year='2020' month='January' />
<abstract><t>This document describes GREASE (Generate Random Extensions And Sustain Extensibility), a mechanism to prevent extensibility failures in the TLS ecosystem. It reserves a set of TLS protocol values that may be advertised to ensure peers correctly handle unknown values.</t></abstract>
</front>
<seriesInfo name='RFC' value='8701'/>
<seriesInfo name='DOI' value='10.17487/RFC8701'/>
</reference>



<reference anchor="I-D.bishop-httpbis-grease">
<front>
<title>GREASE for HTTP/2</title>

<author initials='M' surname='Bishop' fullname='Mike Bishop'>
    <organization />
</author>

<date month='June' day='24' year='2020' />

<abstract><t>Reserves several values in the HTTP/2 registries to exercise the requirement that clients and servers ignore unknown values.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-bishop-httpbis-grease-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-bishop-httpbis-grease-01.txt' />
</reference>



<reference anchor="I-D.ietf-httpbis-header-structure">
<front>
<title>Structured Field Values for HTTP</title>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<author initials='P' surname='Kamp' fullname='Poul-Henning Kamp'>
    <organization />
</author>

<date month='June' day='3' year='2020' />

<abstract><t>This document describes a set of data types and associated algorithms that are intended to make it easier and safer to define and handle HTTP header and trailer fields, known as "Structured Fields", "Structured Headers", or "Structured Trailers".  It is intended for use by specifications of new HTTP fields that wish to use a common syntax that is more restrictive than traditional HTTP field values.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-header-structure-19' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-header-structure-19.txt' />
</reference>




    </references>


<section anchor="bootstrapping-the-http-grease-process" title="Bootstrapping the HTTP Grease Process">

<t>Because the initial focus of this document is on two request extension points, the relevant grease senders will be HTTP clients – a combination of Web browsers, HTTP client libraries and intermediaries (such as CDNs). The relevant grease recipients will be HTTP servers (both on the origin and in intermediaries).</t>

<t>Broadly speaking, HTTP servers accept these extensions, unless they have a Web Application Firewall (WAF) installed. As such, greasing HTTP successfully will require client implementers, WAF vendors, and in some cases WAF deployers to work together.</t>

<t>Clients are likely to be risk-averse; if their implementation alone breaks some Web sites, they can face negative consequences (because their users can easily flee to other implementations). Therefore, a successful greasing strategy needs to include most or all major clients, and their actions need to be coordinated.</t>

<t>WAF vendors and deployers often do not coordinate behaviour, and may not have prompt update mechanisms. Therefore, a successful greasing strategy needs to attract them to into community engagement (e.g., using the mailing list above) and needs to accommodate their needs; it is likely they will not be able to deploy updates quickly at first, for example.</t>

<t>As a result, when greasing begins, it will be necessary to have long lead times between announcement and sending. Likewise, initial grease values are more likely to succeed (building confidence and engagement) if they are static and simple.</t>

<t>For example, the first grease value might be completely static, very simple (e.g., “Grease: 1”), and announced several months ahead of time. Subsequent values can grow in complexity, become more dynamic, and arrive with progressively shorter notice, after discussion within the community.</t>

<t>Some clients may not be able to deploy new grease values on a regular basis, and so they will need some sort of update or scheduling mechanism to participate.</t>

<t>In cases where greasing breaks deployed sites too widely, clients may wish to temporarily stop greasing while the issue is mitigated. This should be coordinated among all clients, rather than done unilaterally. Mitigations like retrying requests without grease can be performed at any time; the point is to gently increase pressure on servers to accept new values, not to break sites unnecessarily.</t>

</section>


  </back>

<!-- ##markdown-source:
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
lrP/BuMHRnKWMAAA

-->

</rfc>

