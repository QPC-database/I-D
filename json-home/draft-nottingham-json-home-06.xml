<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.13 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-json-home-06" category="info">

  <front>
    <title>Home Documents for HTTP APIs</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2020"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document proposes a “home document” format for non-browser HTTP clients.</t>



    </abstract>


    <note title="Note to Readers">


<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/json-home">https://github.com/mnot/I-D/labels/json-home</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/json-home/">https://mnot.github.io/I-D/json-home/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/json-home">https://github.com/mnot/I-D/commits/gh-pages/json-home</eref>.</t>

<t>For information about implementations, see <eref target="https://github.com/mnot/I-D/wiki/json-home">https://github.com/mnot/I-D/wiki/json-home</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>It is becoming increasingly common to use HTTP <xref target="RFC7230"/> for applications other than traditional Web browsing. Such “HTTP APIs” are used to integrate processes on disparate systems, make information available to machines across the Internet, and as part of the implementation of “microservices.”</t>

<t>By using HTTP, these applications realise a number of benefits, from message framing to caching, and well-defined semantics that are broadly understood and useful.</t>

<t>Often, these applications of HTTP are defined by documenting static URLs that clients need to know and servers need to implement. Any interaction outside of these bounds is uncharted territory.</t>

<t>For some applications, this approach brings issues, especially when the interface changes, either due to evolution, extension or drift between implementations. Furthermore, implementing more than one instance of interface can bring further issues, as different environments have different requirements.</t>

<t>The Web itself offers one way to address these issues, using links <xref target="RFC3986"/> to navigate between states. A link-driven application discovers relevant resources at run time, using a shared vocabulary of link relations <xref target="RFC8288"/> and internet media types <xref target="RFC6838"/> to support a “follow your nose” style of interaction – just as a Web browser does to navigate the Web.</t>

<t>A client can then decide which resources to interact with “on the fly” based upon its capabilities (as described by link relations), and the server can safely add new resources and formats without disturbing clients that are not yet aware of them.</t>

<t>Doing so can provide any of a number of benefits, including:</t>

<t><list style="symbols">
  <t>Extensibility - Because new server capabilities can be expressed as resources typed by link relations, new features can be layered in without introducing a new API version; clients will discover them in the home document. This promotes loose coupling between clients and servers.</t>
  <t>Evolvability - Likewise, interfaces can change gradually by introducing a new link relation and/or format while still supporting the old ones.</t>
  <t>Customisation - Home documents can be tailored for the client, allowing different classes of service or different client roles and permissions to be exposed naturally.</t>
  <t>Flexible deployment - Since URLs aren’t baked into documentation, the server can choose what URLs to use for a given service.</t>
  <t>API mixing - Likewise, more than one API can be deployed on a given server, without fear of collisions.</t>
</list></t>

<t>Whether an application ought to use links in this fashion depends on how it is deployed; generally, the most benefit will be received when multiple instances of the service are deployed, possibly with different versions, and they are consumed by clients with different capabilities. In particular, Internet Standards that use HTTP as a substrate are likely to require the attributes described above.</t>

<t>This document defines a “home document” format using the JSON format <xref target="RFC7159"/> for APIs to use as a launching point for the interactions they offer, using links. Having a well-defined format for this purpose promotes good practice and development of tooling.</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="api-home-documents" title="API Home Documents">

<t>An API Home Document (or “home document”) uses the format described in <xref target="RFC7159"/> and has the media type “application/json-home”.</t>

<t><spanx style="strong">Note: this media type is not final, and will change before final publication.</spanx></t>

<t>Its content consists of a root object with:</t>

<t><list style="symbols">
  <t>A “resources” member, whose value is an object that describes the resources of the API. Its member names are link relation types (as defined by <xref target="RFC8288"/>), and their values are Resource Objects (<xref target="resource-object"/>).</t>
  <t>Optionally, a “api” member, whose value is an API Object (<xref target="api-object"/>) that contains information about the API as a whole.</t>
</list></t>

<t>For example:</t>

<figure><artwork><![CDATA[
  GET / HTTP/1.1
  Host: example.org
  Accept: application/json-home

  HTTP/1.1 200 OK
  Content-Type: application/json-home
  Cache-Control: max-age=3600
  Connection: close

  {
    "api": {
      "title": "Example API",
      "links": {
        "author": "mailto:api-admin@example.com",
        "describedBy": "https://example.com/api-docs/"
      }
    },
    "resources": {
      "tag:me@example.com,2016:widgets": {
        "href": "/widgets/"
      },
      "tag:me@example.com,2016:widget": {
        "hrefTemplate": "/widgets/{widget_id}",
        "hrefVars": {
          "widget_id": "https://example.org/param/widget"
        },
        "hints": {
          "allow": ["GET", "PUT", "DELETE", "PATCH"],
          "formats": {
            "application/json": {}
          },
          "acceptPatch": ["application/json-patch+json"],
          "acceptRanges": ["bytes"]
        }
      }
    }
  }
]]></artwork></figure>

<t>Here, we have a home document for the API “Example API”, whose author can be contacted at the e-mail address “api-admin@example.com”, and whose documentation is at “https://example.com/api-docs/”.</t>

<t>It links to a resource “/widgets/” with the relation “tag:me@example.com,2016:widgets”. It also links to an unknown number of resources with the relation type “tag:me@example.com,2016:widget” using a URI Template <xref target="RFC6570"/>, along with a mapping of identifiers to a variable for use in that template.</t>

<t>It also gives several hints about interacting with the latter “widget” resources, including the HTTP methods usable with them, the PATCH and POST formats they accept, and the fact that they support partial requests <xref target="RFC7233"/> using the “bytes” range-specifier.</t>

<t>It gives no such hints about the “widgets” resource. This does not mean that it (for example) doesn’t support any HTTP methods; it means that the client will need to discover this by interacting with the resource, and/or examining the documentation for its link relation type.</t>

<t>Effectively, this names a set of behaviors, as described by a resource object, with a link relation type. This means that several link relations might apply to a common base URL; e.g.:</t>

<figure><artwork><![CDATA[
{
  "resources": {
    "tag:me@example.com,2016:search-by-id": {
      "hrefTemplate": "/search?id={widget_id}",
      "hrefVars": {
        "widget_id": "https://example.org/param/widget_id"
      }
    },
    "tag:me@example.com,2016:search-by-name": {
      "hrefTemplate": "/search?name={widget_name}",
      "hrefVars": {
        "widget_name": "https://example.org/param/widget_name"
      }
    }
  }
}
]]></artwork></figure>

<t>Note that the examples above use both tag <xref target="RFC4151"/> and https <xref target="RFC7230"/> URIs; any URI scheme can be used to identify link relations and other artefacts in home documents. Typically, these are not links to be followed; they are only used to identify things.</t>

</section>
<section anchor="api-object" title="API Objects">

<t>An API Object contains links to information about the API itself.</t>

<t>Two optional members are defined:</t>

<t><list style="symbols">
  <t>“title” has a string value indicating the name of the API;</t>
  <t>“links” has an object value, whose member names are link relation types <xref target="RFC8288"/>, and values
are URLs <xref target="RFC3986"/>. The context of these links is the API home document as a whole.</t>
</list></t>

<t>No links are required to be conveyed, but APIs might benefit from setting the following:</t>

<t><list style="symbols">
  <t>author - a suitable URL (e.g., mailto: or https:) for the author(s) of the API</t>
  <t>describedBy - a link to documentation for the API</t>
  <t>license - a link to the legal terms for using the API</t>
</list></t>

<t>Future members of the API Object MAY be defined by specifications that update this document.</t>

</section>
<section anchor="resource-object" title="Resource Objects">

<t>A Resource Object links to resources of the type indicated in their name using one of two mechanisms; either a direct link (in which case there is exactly one resource of that relation type associated with the API), or a templated link, in which case there are zero to many such resources.</t>

<t>Direct links are indicated with an “href” property, whose value is a URI <xref target="RFC3986"/>.</t>

<t>Templated links are indicated with an “hrefTemplate” property, whose value is a URI Template <xref target="RFC6570"/>. When “hrefTemplate” is present, the Resource Object MUST have a “hrefVars” property; see “Resolving Templated Links”.</t>

<t>Resource Objects MUST have exactly one of the “href” or “href-vars” properties.</t>

<t>In both forms, the links that “href” and “hrefTemplate” refer to are URI-references <xref target="RFC3986"/> whose base URI is that of the API Home Document itself.</t>

<t>Resource Objects MAY also have a “hints” property, whose value is an object that uses named Resource Hints (see <xref target="resource_hints"/>) as its properties.</t>

<section anchor="resolving-templated-links" title="Resolving Templated Links">

<t>A URI can be derived from a Templated Link by treating the “hrefTemplate” value as a Level 3 URI Template <xref target="RFC6570"/>, using the “hrefVars” property to fill the template.</t>

<t>The “hrefVars” property, in turn, is an object that acts as a mapping between variable names available to the template and absolute URIs that are used as global identifiers for the semantics and syntax of those variables.</t>

<t>For example, given the following Resource Object:</t>

<figure><artwork><![CDATA[
  "https://example.org/rel/widget": {
    "hrefTemplate": "/widgets/{widget_id}",
    "hrefVars": {
      "widget_id": "https://example.org/param/widget"
    },
    "hints": {
      "allow": ["GET", "PUT", "DELETE", "PATCH"],
      "formats": {
        "application/json": {}
      },
      "acceptPatch": ["application/json-patch+json"],
      "acceptRanges": ["bytes"]
    }
  }
]]></artwork></figure>

<t>If you understand that “https://example.org/param/widget” is an numeric identifier for a widget, you can then find the resource corresponding to widget number 12345 at “https://example.org/widgets/12345” (assuming that the Home Document is located at “https://example.org/”).</t>

</section>
</section>
<section anchor="resource_hints" title="Resource Hints">

<t>Resource hints allow clients to find relevant information about interacting with a resource beforehand, as a means of optimizing communications, as well as advertising available behaviors (e.g., to aid in laying out a user interface for consuming the API).</t>

<t>Hints are just that – they are not a “contract”, and are to only be taken as advisory. The runtime behavior of the resource always overrides hinted information.</t>

<t>For example, a resource might hint that the PUT method is allowed on all “widget” resources. This means that generally, the user has the ability to PUT to a particular resource, but a specific resource might reject a PUT based upon access control or other considerations. More fine-grained information might be gathered by interacting with the resource (e.g., via a GET), or by another resource “containing” it (such as a “widgets” collection) or describing it (e.g., one linked to it with a “describedBy” link relation).</t>

<t>This specification defines a set of common hints, based upon information that’s discoverable by directly interacting with resources. See <xref target="resource_hint_registry"/> for information on defining new hints.</t>

<section anchor="allow" title="allow">

<t><list style="symbols">
  <t>Resource Hint Name: allow</t>
  <t>Description: Hints the HTTP methods that the current client will be able to use to interact with the resource; equivalent to the Allow HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP methods. As per HTTP, when GET is supported, a client MAY assume that HEAD is supported.</t>

</section>
<section anchor="formats" title="formats">

<t><list style="symbols">
  <t>Resource Hint Name: formats</t>
  <t>Description: Hints the representation types that the resource makes available, using the GET method.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an object, whose keys are media types, and values are objects, currently empty.</t>

</section>
<section anchor="acceptpatch" title="acceptPatch">

<t><list style="symbols">
  <t>Resource Hint Name: accept-Patch</t>
  <t>Description: Hints the PATCH <xref target="RFC5789"/> request formats accepted by the resource for this client; equivalent to the Accept-Patch HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PATCH” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptpost" title="acceptPost">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPost</t>
  <t>Description: Hints the POST request formats accepted by the resource for this client; equivalent to the Accept-Post HTTP response header.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “POST” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptput" title="acceptPut">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPut</t>
  <t>Description: Hints the PUT request formats accepted by the resource for this client.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing media types.</t>

<t>When this hint is present, “PUT” SHOULD be listed in the “allow” hint.</t>

</section>
<section anchor="acceptranges" title="acceptRanges">

<t><list style="symbols">
  <t>Resource Hint Name: acceptRanges</t>
  <t>Description: Hints the range-specifiers available to the client for this resource; equivalent to the Accept-Ranges HTTP response header <xref target="RFC7233"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing HTTP range-specifiers (typically, “bytes”).</t>

</section>
<section anchor="acceptprefer" title="acceptPrefer">

<t><list style="symbols">
  <t>Resource Hint Name: acceptPrefer</t>
  <t>Description: Hints the preferences <xref target="RFC7240"/> supported by the resource. Note that, as per that specifications, a preference can be ignored by the server.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, containing preferences.</t>

</section>
<section anchor="docs" title="docs">

<t><list style="symbols">
  <t>Resource Hint Name: docs</t>
  <t>Description: Hints the location for human-readable documentation for the relation type of the resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string containing an absolute-URI <xref target="RFC3986"/> referring to documentation that SHOULD be in HTML format.</t>

</section>
<section anchor="preconditionrequired" title="preconditionRequired">

<t><list style="symbols">
  <t>Resource Hint Name: preconditionRequired</t>
  <t>Description: Hints that the resource requires state-changing requests (e.g., PUT, PATCH) to include a precondition, as per <xref target="RFC7232"/>, to avoid conflicts due to concurrent updates.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of strings, with possible values “etag” and “last-modified” indicating type of precondition expected.</t>

</section>
<section anchor="authschemes" title="authSchemes">

<t><list style="symbols">
  <t>Resource Hint Name: authSchemes</t>
  <t>Description: Hints that the resource requires authentication using the HTTP Authentication Framework <xref target="RFC7235"/>.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be an array of objects, each with a “scheme” property containing a string that corresponds to a HTTP authentication scheme, and optionally a “realms” property containing an array of zero to many strings that identify protection spaces that the resource is a member of.</t>

<t>For example, a Resource Object might contain the following hint:</t>

<figure><artwork><![CDATA[
  {
    "authSchemes": [
      {
        "scheme": "Basic",
        "realms": ["private"]
      }
    ]
  }
]]></artwork></figure>

</section>
<section anchor="status" title="status">

<t><list style="symbols">
  <t>Resource Hint Name: status</t>
  <t>Description: Hints the status of the resource.</t>
  <t>Specification: [this document]</t>
</list></t>

<t>Content MUST be a string; possible values are:</t>

<t><list style="symbols">
  <t>“deprecated” - indicates that use of the resource is not recommended, but it is still available.</t>
  <t>“gone” - indicates that the resource is no longer available; i.e., it will return a 404 (Not Found) or 410 (Gone) HTTP status code if accessed.</t>
</list></t>

</section>
</section>
<section anchor="discovery" title="Discovering Home Documents">

<t>Home documents are useful starting points for interacting with APIs, both for using the API itself and for discovering additional information about the API. Home documents are distinct resources with their own URIs, and it is possible that home document resources are linked to from other resources, such as from (possibly select) resources of the API itself, or from resources that provide API directory or discovery services.</t>

<t>In these cases, the question is how to establish the link to a home document. This specification defines and registers a specific link relation type for this purpose, so that links to home documents can be made and identified by using this specific link relation type.</t>

<section anchor="link-relation" title="The “home” Link Relation Type">

<t>The “home” link relation type is used to establish a link to a “home document” resource that provides context and/or starting points for the context resource.</t>

<t>The format of the linked home document is not constrained by the “home” link relation type. A home resource can be either machine-readable or human-readable, and the “home” link relation type is appropriate to link to both kinds of home documents.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Clients need to exercise care when using hints. For example, a naive client might send credentials to a server that uses the auth-req hint, without checking to see if those credentials are appropriate for that server.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="resource_hint_registry" title="HTTP Resource Hint Registry">

<t>This specification defines the HTTP Resource Hint Registry. See <xref target="resource_hints"/> for a general description of the function of resource hints.</t>

<t>In particular, resource hints are generic; that is, they are potentially applicable to any resource, not specific to one application of HTTP, nor to one particular format. Generally, they ought to be information that would otherwise be discoverable by interacting with the resource.</t>

<t>Hint names MUST be composed of the lowercase letters (a-z), digits (0-9), underscores (“_”) and hyphens (“-“), and MUST begin with a lowercase letter.</t>

<t>Hint content SHOULD be described in terms of JSON <xref target="RFC7159"/> constructs.</t>

<t>New hints are registered using the Expert Review process described in <xref target="RFC5226"/> to enforce the criteria above. Requests for registration of new resource hints are to use the following template:</t>

<t><list style="symbols">
  <t>Resource Hint Name: [hint name]</t>
  <t>Description: [a short description of the hint’s semantics]</t>
  <t>Specification: [reference to specification document]</t>
</list></t>

<t>Initial registrations are enumerated in <xref target="resource_hints"/>.</t>

</section>
<section anchor="media-type-registration" title="Media Type Registration">

<t>TBD</t>

</section>
<section anchor="link-relation-type-registration" title="Link Relation Type Registration">

<t>This specification registers the “home” link relation type in the registry of link relation types <xref target="RFC8288"/>.</t>

<t><list style="symbols">
  <t>Relation Name: home</t>
  <t>Description: Links to a “home document” resource that provides context and/or starting points for the context resource.</t>
  <t>Reference: This specification</t>
</list></t>

</section>
</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7230" target='https://www.rfc-editor.org/info/rfc7230'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application-level protocol for distributed, collaborative, hypertext information systems.  This document provides an overview of HTTP architecture and its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform Resource Identifier (URI) schemes, defines the HTTP/1.1 message syntax and parsing requirements, and describes related security concerns for implementations.</t></abstract>
</front>
<seriesInfo name='RFC' value='7230'/>
<seriesInfo name='DOI' value='10.17487/RFC7230'/>
</reference>



<reference  anchor="RFC3986" target='https://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC8288" target='https://www.rfc-editor.org/info/rfc8288'>
<front>
<title>Web Linking</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<date year='2017' month='October' />
<abstract><t>This specification defines a model for the relationships between resources on the Web (&quot;links&quot;) and the type of those relationships (&quot;link relation types&quot;).</t><t>It also defines the serialisation of such links in HTTP headers with the Link header field.</t></abstract>
</front>
<seriesInfo name='RFC' value='8288'/>
<seriesInfo name='DOI' value='10.17487/RFC8288'/>
</reference>



<reference  anchor="RFC6838" target='https://www.rfc-editor.org/info/rfc6838'>
<front>
<title>Media Type Specifications and Registration Procedures</title>
<author initials='N.' surname='Freed' fullname='N. Freed'><organization /></author>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<author initials='T.' surname='Hansen' fullname='T. Hansen'><organization /></author>
<date year='2013' month='January' />
<abstract><t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols.  This memo documents an Internet Best Current Practice.</t></abstract>
</front>
<seriesInfo name='BCP' value='13'/>
<seriesInfo name='RFC' value='6838'/>
<seriesInfo name='DOI' value='10.17487/RFC6838'/>
</reference>



<reference  anchor="RFC7159" target='https://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC6570" target='https://www.rfc-editor.org/info/rfc6570'>
<front>
<title>URI Template</title>
<author initials='J.' surname='Gregorio' fullname='J. Gregorio'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='M.' surname='Hadley' fullname='M. Hadley'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='D.' surname='Orchard' fullname='D. Orchard'><organization /></author>
<date year='2012' month='March' />
<abstract><t>A URI Template is a compact sequence of characters for describing a range of Uniform Resource Identifiers through variable expansion. This specification defines the URI Template syntax and the process for expanding a URI Template into a URI reference, along with guidelines for the use of URI Templates on the Internet.   [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6570'/>
<seriesInfo name='DOI' value='10.17487/RFC6570'/>
</reference>



<reference  anchor="RFC7233" target='https://www.rfc-editor.org/info/rfc7233'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Range Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='Y.' surname='Lafon' fullname='Y. Lafon' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines range requests and the rules for constructing and combining responses to those requests.</t></abstract>
</front>
<seriesInfo name='RFC' value='7233'/>
<seriesInfo name='DOI' value='10.17487/RFC7233'/>
</reference>



<reference  anchor="RFC5789" target='https://www.rfc-editor.org/info/rfc5789'>
<front>
<title>PATCH Method for HTTP</title>
<author initials='L.' surname='Dusseault' fullname='L. Dusseault'><organization /></author>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2010' month='March' />
<abstract><t>Several applications extending the Hypertext Transfer Protocol (HTTP) require a feature to do partial resource modification.  The existing HTTP PUT method only allows a complete replacement of a document. This proposal adds a new HTTP method, PATCH, to modify an existing HTTP resource.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5789'/>
<seriesInfo name='DOI' value='10.17487/RFC5789'/>
</reference>



<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC7232" target='https://www.rfc-editor.org/info/rfc7232'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP/1.1 conditional requests, including metadata header fields for indicating state changes, request header fields for making preconditions on such state, and rules for constructing the responses to a conditional request when one or more preconditions evaluate to false.</t></abstract>
</front>
<seriesInfo name='RFC' value='7232'/>
<seriesInfo name='DOI' value='10.17487/RFC7232'/>
</reference>



<reference  anchor="RFC7235" target='https://www.rfc-editor.org/info/rfc7235'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Authentication</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems.  This document defines the HTTP Authentication framework.</t></abstract>
</front>
<seriesInfo name='RFC' value='7235'/>
<seriesInfo name='DOI' value='10.17487/RFC7235'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC4151" target='https://www.rfc-editor.org/info/rfc4151'>
<front>
<title>The 'tag' URI Scheme</title>
<author initials='T.' surname='Kindberg' fullname='T. Kindberg'><organization /></author>
<author initials='S.' surname='Hawke' fullname='S. Hawke'><organization /></author>
<date year='2005' month='October' />
<abstract><t>This document describes the &quot;tag&quot; Uniform Resource Identifier (URI) scheme.  Tag URIs (also known as &quot;tags&quot;) are designed to be unique across space and time while being tractable to humans.  They are distinct from most other URIs in that they have no authoritative resolution mechanism.  A tag may be used purely as an entity identifier.  Furthermore, using tags has some advantages over the common practice of using &quot;http&quot; URIs as identifiers for non-HTTP-accessible resources.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='RFC' value='4151'/>
<seriesInfo name='DOI' value='10.17487/RFC4151'/>
</reference>



<reference  anchor="RFC5226" target='https://www.rfc-editor.org/info/rfc5226'>
<front>
<title>Guidelines for Writing an IANA Considerations Section in RFCs</title>
<author initials='T.' surname='Narten' fullname='T. Narten'><organization /></author>
<author initials='H.' surname='Alvestrand' fullname='H. Alvestrand'><organization /></author>
<date year='2008' month='May' />
<abstract><t>Many protocols make use of identifiers consisting of constants and other well-known values.  Even after a protocol has been defined and deployment has begun, new values may need to be assigned (e.g., for a new option type in DHCP, or a new encryption or authentication transform for IPsec).  To ensure that such quantities have consistent values and interpretations across all implementations, their assignment must be administered by a central authority.  For IETF protocols, that role is provided by the Internet Assigned Numbers Authority (IANA).</t><t>In order for IANA to manage a given namespace prudently, it needs guidelines describing the conditions under which new values can be assigned or when modifications to existing values can be made.  If IANA is expected to play a role in the management of a namespace, IANA must be given clear and concise instructions describing that role.  This document discusses issues that should be considered in formulating a policy for assigning values to a namespace and provides guidelines for authors on the specific text that must be included in documents that place demands on IANA.</t><t>This document obsoletes RFC 2434.  This document specifies an Internet Best  Current Practices for the Internet Community, and requests discussion and  suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='RFC' value='5226'/>
<seriesInfo name='DOI' value='10.17487/RFC5226'/>
</reference>



<reference  anchor="RFC7807" target='https://www.rfc-editor.org/info/rfc7807'>
<front>
<title>Problem Details for HTTP APIs</title>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham'><organization /></author>
<author initials='E.' surname='Wilde' fullname='E. Wilde'><organization /></author>
<date year='2016' month='March' />
<abstract><t>This document defines a &quot;problem detail&quot; as a way to carry machine- readable details of errors in a HTTP response to avoid the need to define new error response formats for HTTP APIs.</t></abstract>
</front>
<seriesInfo name='RFC' value='7807'/>
<seriesInfo name='DOI' value='10.17487/RFC7807'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Jan Algermissen, Mike Amundsen, Bill Burke, Sven Dietze, Graham Klyne, Leif Hedstrom, Joe Hildebrand, Jeni Tennison, Erik Wilde and Jorge Williams for their suggestions and feedback.</t>

</section>
<section anchor="creating-and-serving-home-documents" title="Creating and Serving Home Documents">

<t>When making an API home document available, there are a few things to keep in mind:</t>

<t><list style="symbols">
  <t>A home document is best located at a memorable URI, because its URI will effectively become the
URI for the API itself to clients.</t>
  <t>Home documents can be personalized, just as “normal” home pages can. For example, you might
advertise different URIs, and/or different kinds of link relations, depending on the client’s
identity.</t>
  <t>Home documents ought to be assigned a freshness lifetime (e.g., “Cache-Control: max-age=3600”) so
that clients can cache them, to avoid having to fetch it every time the client interacts with the
service.</t>
  <t>Custom link relation types, as well as the URIs for variables, should lead to documentation for
those constructs.</t>
</list></t>

<section anchor="managing-change-in-home-documents" title="Managing Change in Home Documents">

<t>The URIs used in API home documents MAY change over time. However, changing them can cause issues for clients that are relying on cached home documents containing old links.</t>

<t>To mitigate the impact of such changes, servers ought to consider:</t>

<t><list style="symbols">
  <t>Reducing the freshness lifetime of home documents before a link change, so that clients are less likely to refer to an “old” document.</t>
  <t>Regarding the “old” and “new” URIs as equally valid references for an “overlap” period.</t>
  <t>After that period, handling requests for the “old” URIs appropriately; e.g., with a 404 Not Found, or by redirecting the client to the new URI.</t>
</list></t>

</section>
<section anchor="evolving-and-mixing-apis-with-home-documents" title="Evolving and Mixing APIs with Home Documents">

<t>Using home documents affords the opportunity to change the “shape” of the API over time, without breaking old clients.</t>

<t>This includes introducing new functions alongside the old ones – by adding new link relation types with corresponding resource objects – as well as adding new template variables, media types, and so on.</t>

<t>It’s important to realise that a home document can serve more than one “API” at a time; by listing all relevant relation types, it can effectively “mix” different APIs, allowing clients to work with different resources as they see fit.</t>

</section>
</section>
<section anchor="consuming-home-documents" title="Consuming Home Documents">

<t>Clients might use home documents in a variety of ways.</t>

<t>In the most common case – actually consuming the API – the client will scan the Resources Object for the link relation(s) that it is interested in, and then to interact with the resource(s) referred to. Resource Hints can be used to optimize communication with the client, as well as to inform as to the permissible actions (e.g., whether PUT is likely to be supported).</t>

<t>Note that the home document is a “living” document; it does not represent a “contract”, but rather is expected to be inspected before each interaction. In particular, links from the home document MUST NOT be assumed to be valid beyond the freshness lifetime of the home document, as per HTTP’s caching model <xref target="RFC7234"/>.</t>

<t>As a result, clients ought to cache the home document (as per <xref target="RFC7234"/>), to avoid fetching it before every interaction (which would otherwise be required).</t>

<t>Likewise, a client encountering a 404 (Not Found) on a link is encouraged obtain a fresh copy of the home document, to assure that it is up-to-date.</t>

</section>
<section anchor="frequently-asked-questions" title="Frequently Asked Questions">

<section anchor="why-not-use-insert-other-service-description-format" title="Why not use (insert other service description format)?">

<t>There are a fair number of existing service description formats, including those that specialise in “RESTful” interactions. However, these formats generally are optimised for pairwise integration, or one-server-to-many-client integration, and less capable of describing protocols where both the server and client can evolve and be extended.</t>

</section>
<section anchor="why-doesnt-the-format-allow-references-or-inheritance" title="Why doesn’t the format allow references or inheritance?">

<t>Adding inheritance or references would allow more modularity in the format and make it more compact, at the cost of considerable complexity and the associated potential for errors (both in the specification and by its users).</t>

<t>Since good tools and compression are effective ways to achieve the same ends, this specification doesn’t attempt them.</t>

</section>
<section anchor="what-about-faults-ie-errors" title="What about “Faults” (i.e., errors)?">

<t>In HTTP, errors are conveyed by HTTP status codes. While this specification could (and even may) allow enumeration of possible error conditions, there’s a concern that this will encourage applications to define many such “faults”, leading to tight coupling between the application and its clients. See <xref target="RFC7807"/> for further considerations.</t>

</section>
<section anchor="how-do-i-find-the-schema-for-a-format" title="How Do I find the schema for a format?">

<t>That isn’t addressed by home documents. Ultimately, it’s up to the media type accepted and generated by resources to define and constrain (or not) their syntax.</t>

</section>
<section anchor="how-do-i-express-complex-query-arguments" title="How do I express complex query arguments?">

<t>Complex queries – i.e., those that exceed the expressive power of Link Templates or would require ambiguous properties of a “resources” object – aren’t intended to be defined by a home document. The appropriate way to do this is with a “form” language, much as HTML defines.</t>

<t>Note that it is possible to support multiple query syntaxes on the same base URL, using more than one link relation type; see the example at the start of the document.</t>

</section>
</section>


  </back>

<!-- ##markdown-source:
H4sIAF7AVF4AA81cbXPbRpL+zl+Boz9EypGU7DiJI99eVn6LlfVLVpYvtZVy
pYbAkMQKBLgYQDLj8v7266e7ZzAAKTnJbe5uqzYWSWBeevr16e6ZTqejJm8K
e5I8r9Y2eVKl7dqWjUsWVZ08v7j4ITn94cyNzHxe26uTUValpVnT01ltFs20
rJomL5crs57+3VXldEVjTI+/GmWmoWfuHd87HqX057KqtydJXi6q0Sjf1CdJ
U7euuXd8/M3xvZGprTlJvrOlrU0xuq7qy2VdtZuT0aXd0qfsJDkrG1uXtpk+
waSjkWtMmf1siqqkSbbWjTb5SfJTU6WThP6TlxltYJK4qm5qu3D013atfzR1
ntJPabXeGP2DdzuhxRV5ad+NRqZtVlV9Mkqmo4T+l5fuJHk5S16FnfLXQoSX
pr4c/lLVS1Pmv5gmr8oT/sauTV6cJGsi1p/xnxlthX9oa1r3qmk27uTo6Pr6
euZ/PRqNyqpe0xhX9oRIRoTrPo2m02li5rQX2sJodLHKXZLpsSWbutpUzrrE
JGMcRvhlnMgYfK4lHdW8rq6d1TNOixxkmMngtAr78yv8p6l+Prcms7XDRDbJ
nWtp8CJ3MlDDk+NUktSUydzSt22ZJTTPf/iNLfNm1c5nROoj7O/obPrkqDBz
W7ijwDP/OZPx1xUNXNsUWzmoFo0tJ0lbbto5zbiy2aHORZPGMzDZdJq84gnC
yEcY+lxGTFemXII2teUt2E8vFAySN+5ouZpuDL3bX/IzIkE4nKqkU6laWt16
U1jQnL8E21l7+yzX+WXeHxnHsM6zrLCj0R0IQF1lbYrxRqMzJsDc0hDEd7SA
lCTI0Z/FlhmaFtJUSeusnO2HD/92/uzx1/e+OP74kQ/NbDZFnsrikqpZWZwj
nR4xVJbjW1MkP9p5whxCw86SN226SsZBG4yZgjRBholyks5lTVIO5kutA/fR
ErLcbQx/7bZE6jXRYW0ubZ9eVyQZZl5YjLM26YpEkI4nrSvnaE02SP4kMeAq
l9CQTVIt+Mc+nfHteJ3jXVtf5bSQ2Xg0erSldYJKWPwErxFZegQg2hEv0JdJ
2a7nRAsaZ07KaJFDLSzqap2saVN0+PTBMMVpsSkvdinrurZFMc3ojZIo4kjc
yyZPsQHiLlCKCGkyOhySDJKkpqoyfo0IuGgLOuzXwuh7FkdrYapjFD/BfBuE
Gotx2H6avD1/oTOqLCellfO5LKtrng90ofnDD4F+s+S03PI5QqUwLdvG5ZlV
StOq5hBrB75rSxKjGrJDj9d5Q6pdJcFB38TLn4h+oK+IAMRB85oW7FSJTBLr
NjbNTUGUuV7ZUs4Ui1iY1HphpcdyZtGsZS6xV1XRYnT64T2RzfFy6ec6J8Uw
t821paEGIjhLnrU1RllXtZ10v4J++Er4n8wJ1D0Zl5R3Hq0Fug2LTxYyTtgD
sWSWLxa2hn6x5VVeV6XYz5W5stFvtf1Hm9c8q1NlBxkjJrPFgmZb4GSwgmuz
xT5NltVWpMDZMJ3wMlmqS6dy/cU3D74iuaY3SnOVLyFvngjgDJKC5JRfmBKF
rujb6IAgo2nFPFHbwl4ZXqer2jq1rGHrlk4lX1s/sUkcnT0d/VWVmnlbmHoL
QmF4jKBMKwt7cO/BA1oYGC9XKSZBynKTNNuN9U999eCLB7J81242ZLFhuBZV
URDPbmkhZIucHdNWtkV3JsqkpCL/Tm4EzsB0CgusUtH4MUUaoTbR/VTFg4+0
AddlxIPE6dernDi0270qNsyVXBMHJuNKOHRRbMfJ3ED5tRv6jk6QBtuYeV6Q
8qQ3D8AT1qV1Phdp7ZPnUHQGhhKB5KU4s7AkB3TqJJ7X8SnQs6IwHa8DBoaO
rWnrOU7EC3vQNWRSyCWiv6/xSeR3TRt/UrGyqHg2kscrbNqUfH77VR/ZlaLN
6C3yOT5Pnoqw8S63yTR5ZFMDE4PVhn1EVFB3wL7fgI0tK++IusQCe2gz4eEW
1tD2ujEKs7VgurwMFMjVIApT4iWySwk4mYZ5GKhynRdFYHKmBAYB6Xu+0Sxh
J4qosianh9ybipiOTGlLkkITeHnyo0a6dMakIZV0ZQJlXuSX9posyqRTILIV
0WgJ2cqsZa033+7ZSI8imOuItJv6bsSkJAauwbZUXtge0YaqIoP6kBU9JrEg
58DJGFNx7bPg2itdGzK+FQgrnpzVDRJ/QvwwcKe+0sKIYV8kal5Z6Ua/s1TV
VaE8uyFlS1qLFQLJkrBCBUYocbrYPy/1WWHf5/AAMrspqi07sdPkTQ4dzDaN
2Lj8jDQ7+Q6sSaqwESNmYCBJ6YpP7xoCIUZRfCH2fJIl60DdAi8AjLPO32O7
8dn1zQIeUqrJOi2o3RvP1pPAnsTBLEwpKbKcaUBT/biybDpMXwdX7XLV+EWK
ZmceJYZcGLdiNW03FtaX/lyRXszZ//PreJgsJXQqtkIL9qFVjEUCaNXwqWmp
mVjadVs0OdnAYO6c96n84YrDITNMEjo4En3YaWjC7tRV4FxQaVt+MaWv6IRY
wDtR7L0Z64oZuXns2OUpTMokeH3JGwR6ps5UvwWXljW+azkGaqz685dQoERH
tbS8HdNQxDdvIdSdSiYv/crOhpGTuFe3BE5iAjHq929ev/Lfqnd998tv1LuG
g+yPk9dZGLhMeHdDOrgJ0haZMie0Yy+gZ+RnyXOyYawbek5mFMsxp2zaGsLV
qbAlnMwND4/TpNPJ7JUtqg3vFYddVVBuRIbRnTuIYY16/o+r8gquEa1K3BQK
wxPE4S4Zv3z75mI8kX+TV6/57/Onf317dv70Cf5+8/z0xYvwh3/izfPXb188
6f6S70f05uPXL18+ffVEXqZvk8FXL0//NhbeGr/+4eLs9avTF+MgHeHkcPyi
YpikZHA4snOj7sjpnUePf0ju3tfzunf3Ls5LPZW7X9+nD5AMmawq1SWdKE9v
NhBoGoSkDKybN6Zg52/kSCBJKompZwjUoCf6OAq5HOXu1xTc1kM+OwTLSNij
x9tbf4/RsMqVkYc7pyoZR4qliyfH0HOfI54/EcpFb9AneAzEVabQYAYaQ03V
3C6gBvnXhKNwGXv2+ecIQx0kvWFxJm4hp8SJN1FXNGQ1/7tV34kdiNNkHOz/
mJYAh4M05gpse2WKltcCdSvvscB7AshGO/dBlRWRlXRH43Q0BmV8dB8bUXE4
xS8LMVTspXY+WV7LYmSYc50xec2LojE+fPCrmMpC6WU2I683Ij/QwgYHkd+2
STCEjIkh6eFuNA3iiLCGtPMeeEF3LsqFhi6sxl/2vUFgQ9T+5z//OUqS755e
JEesMI/uzu7SF8/JMpz4x2ZVvaTvTtPUbujbvZwzwkv6fnLv+Dh5/Rf65rEc
+vSCyHrTi/QURXx2imfJKTih6P79lGLoP33x1fGxjFFa1n0nZCKIPJjqA6Ni
TLsT/UAfGZ6kL8ZPZeHYPKkP/ZXVZPQ43mcED28AeGuqE9DXZBS6/9nvPa3W
YQh6Iwjaoy1e81BN9PQRxiBRdUdjfe0j//tRRolYO165WZ6sbTzp5N7x3a9O
rvNsaZvBqle1XWDyI/21m2jy68bbHe7C0nNkIHvDfpA/fs6zjzEJ8Px/mbq/
KPo+PL2PMMRCRwB51jr6OLz5MR6a1PLOuOxj0pc/jYlNoet/eMv/PHn64unF
U/7i9OLx8/G7SfyWRkKDwZJdxYcnPkaPfOwNY5jpfzBNuuIl7PDwBj/9Ow/0
bs+b5wxN8KvzLZnb8btu4332GOH/EMfRcwvo4doKMGD6EUhwCiDYfUZX7SFM
7Z1QVg+pAph4z07B6wE1GN/A8qLhecCeF62I6ic4f8bYo/iogCiCRo65Vjw9
0deqfz8pCNDiZFspOu0GL5O2BHRVRsFpZwF2JxED+AkRCTjG2/OzxIuHhyK+
/Pr440dEPxU9whMYUlubDd4A9IC0Qr7IAZfw7q9MnTN4icODu8eeCQ5EBxZ6
8b4QJzjyrq/gqScsER4t9m6gnxS7orfpWy99427jUVjOD7I7vKbAoiL/rHW8
HD/KWuIBliM++B9ek9vmwQTxbJidO0RiYbzp5Z89JsPOOa0brrWFmQ+Y8hfk
jHSOsUpDUkM+pgzvgV5CByFBCaQnXfVIwK96Xgh71aicwRz4KGtrlL4U1xws
OoN3yM8gSAwYUrntUeYhXsH7LmzOR6zs7nhENIIKgLBv9x+OX+DER+dYR156
IvQFC+sERLTrkRBVnpLDnyKtI7EbnDFxYYhTGkFjSFvkVa1IY4wqRdInvsPE
8+yeqYSUEQU8Jw6gu3WOYBTqUEBIn08A3oVo+mFiZ8uZehhQwXsM340y6MiJ
TlfT+XbK1iSYyR1TJQ9+m2d/2mes9puq32ao8NheO/7pteOEfs3q8VxYPz78
2h3oBJ/eAz+4x9yowYHD37G7juIk+mV1Na/A0GZJ0vwtSfP9u1/e9aEFptav
NXFECpPECIIF1enIt1tbb41CJkg05BDVk5hKsI+6sdAxjHH0LCCFuuRPkhH2
OIazAc8MRoHzi3AcAHsEuIHDtZ01NAi5Hce3kbtNu7oTudshOlNnPLjdYcqb
/W+B7oEjXFdJpe6/+vwuzthw+KNuLEdthhPRpC40JCgzdj5Uf+BYowjnIb8t
bq68HWIkft07CL8qBoqDHtH6Eu0Q3+AVxsvivAIUh3gb9n3TZYMUpnKBFn1n
pheZvPJGHRMoNpPpYabAGhhhmhNhGTkRDeThK06/kS4MxJHj96C0OkVTRoMo
KIf1oz0kB9BSyDey+w+kUoTpMPhZ8uaBO4woTQNGgQCPyjQcQo6xs0bvkOdo
SyJK/DzbcLskfiD7sXbqIfhN4L3RsxYgd+CXbhmeF1+e/k3wxhCyqkH1yUHB
xDaZZDgiRESYfid4/XBnGLsiHzJ4rOP8nXBbAANhVsEkJGBmhpXdASvF0yQR
awsQIXdrUhuawjNkYGs/R3IAPJ+zLimsC57g8Jg0VdqQRGOszsQtZLt9d884
V6U5ryZYZ6IghfMM9no/LOMJJ8m+CcGVv9i6kgx0uRXvJOwdmZNuzcLEHQnE
4JYavHHxha2b7W7Ez0qzJ1ikNnqru3XoYF8+NcVel3aW/AjQdzASJzxImAH4
g25DPmCMT2OVzmCFBTzkqoYx3ioYoey284J1FZddDDiwGzM+ZGUvJSIDY/TX
9CqeL+ejOCvFaEElO1m2suuKoxcegOHC/l7pA5y6SpXc2ZS/sAx899KoQlT1
ds5Ew5kmFs4+jBdswO5WSXrZ8w8k5Cj4lgPsQ1+MBUKysu5knrPPfADCdzjU
zzwwgCNSu/A0exS7I3pg7xFB+rHLkNioOUPAOtcMHob6aWrbWakBhWUbrPhf
AGhOvrgtxIoihl3Owjkt4JWzzulCqYv9j7NYkyotJ3uoyK4Gr8oHcj6ZF4I3
NZhxJUo8sRSezB2qDpgpolxrq3nNZVHNSdXHAaI3EV01CGcNt2RC3gs7yeHL
IlwfwZtoWqln8IYCGmC+vY4i6cmjASz0WyChfR7q74GCvFs9hIB+O/yzF/q5
FfbpcLPfBffcDvVEwM7ZApUKvrhHIul9WMoOhZRfS1IldZ5G7KO5SnlswqOH
cgVyBrJeFEpOVE1/b6oy09okec/DJnfvfXH/y73gDhbkWYCfGgMjd63UOPnA
YaDwkB0XC3XTkOPDgf8haqvzPlRjRUpTwQCu+ggVDZXsNVSm7Cm0G0bnUUws
qQvyQLKJKgAOfkn04Kqv81+4eoKi27bsypXoQaTZ+IXsCkpU4KKgHEI87l1M
2JScfaHCbNkDalHC0qIMpasfwnlKUjRyAUEmIQ10CVeyMNGn0y60QfRDtgMO
ODaqAJ4mvDju4Tz+Jep6eM25Qz0We+11W6J2J6zZW7FAIlNcmy2R5Ap1XOT5
8jGwYxcIPdRLEYHFUccrHa+QECvkwrwtkRonyomou2DWLiwxSGUzGX2ey1dY
0M4xD8MTXdY4QmXmfATeWR6uuLZsHgwPEtXxQNydZLTqqoAbIiErp7ZItH0l
2UvNiNnpsjbsmceM6cOXZGnYv8w+iSJ5TrrKDS2KtKF4r0B4SllBh7JqeErj
jBkEY1+VubuDz1BzIJmVQy7RkIiGC0UbPxe8LjhOGjI3Xnp6iZB+AHnoE+a9
ICTKmitipYARS/SkVycVUQln/ZkLcJuI1lajg2IPwSKWebPr/fxc22VOIfVW
U/DxVH6NGArlNbwwcYyYPxFG9jRV8opLu+XHz5MnTJGNZKpEXHdw1w5TbOu4
GsYXX3i/AqDLTl1ZzAsUKVF8TL4U3lZH5JS1Is8nap4GWXFN9oyW9yY+DRTB
x3Hgu9FIc3XieWMpxOh1bbjsS0AIN0k6turta5acOtTxaO0sV44gpwgmEKAV
kbvxu2WPF+ZDUafnT0+f9J4Vqqsdv4nu/ucbKV9bDVtiXCOcQCfspBQjty72
ObEH2eLvpGDAW9mJu7RbUeFRdWOMrQhGJWHBxLMIMTl5Ys1WObFzUG7kR35k
Ks/cSBzB+sXZ/vLrBygVUMw+4P4ykCimHsVCMYmc515ejBbxv8aSEVmlikrr
P9j0xFGsuoyJVpnMQ5G/1vyp08kv9uheueZ2svMTNxMdaZU/gswo5Pp/SGXa
7u8gcvspGre3kfjt76fw/zG13v4OYknQcTu99Jmb9WQ/B7cnxFW9Hch1qxUS
lpRJ9zJlLyf4h5mmnV0dNF3WQCO0wx7fMdTzCdaTZ24k5WYHLvr63n0kRYJp
G/Ig94uJHeSoYiM9Ns0AwoX17Ab3QEy+LKu6G1OKS/8Iikb7EpIhzX8Tqfi3
G0nEQaHHxlft2pTTmtiC2W0/eN5Hcgexye/arc+qRDsEBRS7mQ4hWEEFaw2a
+4vks+qklsT1+cXLF6p6hFZEvBQxN54/17TGTbTb++wNtBw6MpoycdLOMeXK
PKw55OLVpydFMxH7fyhOJsoErDBYmDwwYxDWe8DjEEtdVRTH0oOLIgdopu02
9IV3aiXT4P5ljMjer1YWW+8rjW1jlorhFsY103WVQdKzcS9NpiwTbw315TYN
biYSPG84S3mzHo0e+a2HgXcB1yjXd86lNMn1f31W03xobO3I/uX/XEcGl9Ki
t8pHcJKZjdDUWBq8hGiJoceNtJ5FSqv7S5fhtCw2lDhiIvTNrd0NE0XL7CdX
5PC1jMOnammIRkJW0o/cLrFL+VwwHK0E2sUlhukLCcR1TQMkFeY2wKe+6LBj
BoB9CgJGUKMS9iQZPzIuT+PaOSUFMMJNTYazsaEgTMDIdx1aSKwJQW5v5Er9
9UZNK7//KxXmwx0ppIhFktYZgi2G+8bJNGSnonL8Iaak9cSQS3RWZz63Kz0L
0rkSHBEunB0vq9LuGX132ASFWUgj+vcfJvnMkurzfQ61RR6A9nX/+H5yQBY4
eYa2RcZB7t89Tg6+o6kOhc+VjGlFOjJfKPrDymN0J3miwAS7Hf22+A93PGqx
/TgaDRprNCmwaAuML805XPTvFJcYwBrIeE9CSqufIfatgdoAFsASlq8sNOre
WJ8wG3b9cEUCuZ9kGeI2Pw9C5CRX1yVnOETc5cgCa/Ch9PP8UZdaHQNKnEHq
Y1foglawin89CC0ltEmS18O91d1KAwbE+LWogwzL8X1seFTAowodiR2xtklo
BubsoZQvIP2r6UO2oVoAid4adJg6FBLkbhXyi6Ie97WM3QCGMWwNSIr97g6K
3C3J2GnhwL0FsrmQiF/t7d5am0ySUyFvwB6j56Focftrz6CJJKWGFgFJ8p37
Z1DaTazOfaP+xY8+BcfP79kKmoO1CqejoYkoOGysCeIdH6YL5SZaXbdPkpqo
KqVTgbw+7Z1QJlKm7POtKikgu41iuOpr37g5dNHyIF3aRRscpbRBm9c7p3fH
De6KLG+lIDdLkxXhoo4qEI91xGXOXWCLYeUU66w3lhw14OOPe4A1qf1BP7h9
b+s0ZzGoraB6wjQCjSYDw1qa/CrEimJVKbQlV5F8WDCeKdR90B68Lnvt62yI
BP/gwbsGObKl6aV63khn5z4jGo+K5cXkkIPn4kWJiHAzwumr050dE2ezju+b
13MFiYeZqA49vhXhDs7d/lH3AtPO37jgExsKx2/8hQXsl7Rl6j8H7vIw9aAz
rv87U4hHztOH6lM537NEP22qRmhZbH2bhob/8MW6hAmEISgLTizZfoviQiHg
sqr971HmRaMif4WLJm+2XWfj3O6g/8l11RZaFYiGSy5AGKQDbk2baPJM0/fe
pcHFLtxk6sW/uiZmRzlHYRvWxgdm+svhhOZaolbi4Hj6zeFEc7fkEKNNaPzz
+FCqILcbEg58Mx1rh5DOs9RWZGi3wQx+Xb4zqgsie91cUhZGq+Rewl5vl6il
NuXzf+VTFlo+J0YFOZXgKzx9D/+bGPEqp4f1Do5h7xgqOb+8d0+vCrA4jVRa
JOkpGhHJJ26LTM59XAnGVdEIbBD3pkfr8rmNnpftKyhObvJ0f1r5A3w3dHd/
wk0DqOTeIy946zPXVVa82+P6dpgKFExfnjuH+KzMtay926VsyHJS3pe57Uq1
2s+XDAOysTyPxiA98ugJP7DHqg4e3FU4nefwCWNRqkCoWhtexLCn5HMmR6G/
yylwu9aA/C+6Fo8/2mZjPXpWJ3t8Kr3uaG7SSy7kTdESUthsabW78mJldK3f
o6+uWErfOXo3X+aX5BqucXEJPj5CiPCorS9J471Bec2T3Da/0IfvarMy6+Qv
xbakTy8sGaPnNiOaVutJ8n0Fni0yO6+5luB7W+bJhS3L3AFOeVrnl8mP+J31
w/dVvbT4XORmHbZNrrVrl0vxNPVKBzLG2JTY7se+sgo/vYHHuhN4KMq8Npca
YO8pu+2SXV1to6GprhMphubbYKzdgHXW5EtoX+aOczQHzB6VeXDgXdVaXns2
wd1DfPkDVChgNY6+bNfMIJcTsUKgyBdPxP1NGtgAXfLXTn1+wxUFpNkcwpz8
FwSS/raPMV+OVYxl5XwvE14YuC4om2F/BcXNWs0R38gSIp2j3k0GwckaXk0h
XfhS5Rrh55+heFp8cKTzdnYSW0FDMc8S7iadConAqoSmLvKF5UINBfLGt3RO
kmVyFc3Xu+iHbz3AO1jVOkLzVtI7jojMImNHEZ3loIini1IA3tJ20SDNES5J
8PdJ7FMvvZoZjMgVcjjtUNs2gSqHsS/IE95bTM0bkis3ItPHCtaUhtHOx9KQ
DCB2IBYXflKOPfI9giHFmNrSLO09tH/Ex9eWr20ImCrop+Rsw607Ur0zvGeF
yLBVXmDaZzthWgeH4W4Oaeen5VbElE13LU3ON9ExMIr4ONx65C9rCuzj61DU
nOqdIWxyd1lpJ0bwrdwajsk0XawZrjZBHC8jddcp+NrZMhnTTsZRmTkWsjR1
6EaT3xm8JU9hLOdCjEEuBTuhVyTJWRJlU9g5xri018JsxhD4XPLyp4vGRxPy
5SRBNVfRw769WpGJZbouYii20q8UOqOACwVYyJfZkDfF0IHfhMqEJr7g8dC4
yo981YtX1C/l1hBuW+AJhqz5VsKqAQyzWFRyowUdE6eP2lLLmpRFeUNuZTZk
9yMsJHBuF0bNyW5ceg7r7vBjM6oJANe7Yoav19F4w0mnI9/zxYvRG2RQgDbn
q4j8G/vcCt5wv/Rw0I/GA/Uq6sKAobg2UhI71RMOgQa3DpK3R2JClDJyLv7K
NhHGgf3i25QgPIMrXMbophVrBiI+lNuHnJhdBg/DDVh9BZfLmLF5G6/z9+PI
ZgiOF67NiUoYGfUf3H0SwWbahokQeJFr38bjUCg45CcfyUsUDg014C3cUME0
tQ37g6jvC8CXXAyj9VkcseB80kZEc6c8UesQe7VMTstQgzvvPNzuBbHHKmiv
8Q2bzJEIXTT/HeCQ8vaSKIwhiTpGL2bDstJBC5oWd9p+aWc3bLjiKLJavslL
P3DGV28vgsfjr2hR83yt1/igJCGPFSWtIuSDD2fD/rsdJ8ugqeuKS/n819ym
GvpdQ6HToAIUcHrN1YXSLSNZrxBnO/2sCp+TQ9FVMzuX7QjMyOjq7jr9RS/q
vPClPjKRqPK53Va+dXivFdoZMmQggSh85vxFisScmS26/Nh9DlZOnVSctgXu
alXu7yyi93kGiz4Y5jjv8w0fwS1iZ0gLIj2V2C2KL5c7kE6hPTCF72HDGXf3
RYUyODJsZF0aBep3UxGlt8E4PDxbk3NHU8w5UaWOIbHvZnsD/bAPOoraxrLV
bqZNNc2kU4KUyDM2kVxnduqAgP5VgW6Bx35cbZnHoEMOiGcAIAhg7y+AigNv
gW4Ov2Vnq4srDHq/Qm++fa/K9OYRBt3rlVfheg9kLi304/Onby4WbTHu3ZAU
uWsC4vsyoFAyLHV2LP9OLzXb0BKvZVi5o5RT4CjtLe1UPCyQDanJaeQKhyeh
otgd4uuq5AbCqKAWecsqrQoHpVD7htpQssGvR9cN4urKK4kT+Tq0hvNjs3Ag
vou96VBsKYmPHCbOItFkOV/bRSdyKlY1+jJh3Ca8IRwsA7FFJEmD5MPnCJlR
mYwWJle0NvJkuCbZl7fCgHCNr+KtIAkewh1uzTYA3FFbXoAg+TxIi3PtPBNK
J++DH0ycLQeWKP52EDK5DI5vtMKtVRJAY1pcdcEvQYK9eWajx0JCQk4MI5Og
RRF3qE36qREPCQnhcenCesN7XftjAV04rTZ+ZkgNuTHJCycdZS8QirNS4VHd
nl6Bxp2t2Mww3+jQkJcXdt9SUj6tA+zQXnG8vz3Uw/OYlEJhITHHsyahDsJp
9P+Z4/Z9Il3tr6XAdBKqe73Tv20WsRmj3VEn5Hgh255w+KbhZKPJ9cEFiXz2
EW4sWUQXPFOFyLmr/MHx1wqO+ytVB4X2AuPTvp9UyVnX9sJpeKOoujAu6yXG
vvkQ5QoUIf2wxfxtQeqBIwP4dZ9Bb3qTH12KFSoLsQHRL1rj1bsfVGkl3Kip
JL7YizTrocd9uOOr20yGzeilmF50kISsob6WssxvkarvfsnFJReui7SmfZ9y
RmcVbtkE92+AR4M/GHr07V6sOEQT+OvxzHqeL9uqjRsG5fqu+J4ubaaDpyj3
MEI/Qm2pGxB1J+/JkPbzN3qzbVYJJ+YuFK3gHMdJQdFPaxCWrjVVzEVXmoDp
eVTD3HR3fWy42lCIKvSXG6mDIvC3Wfii8H6gsBvtSK+rEFpu5lGFyDCnN9NR
9/V/A5bkt+5WXwAA

-->

</rfc>

