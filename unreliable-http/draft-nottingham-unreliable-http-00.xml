<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.3 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>

<rfc ipr="trust200902" docName="draft-nottingham-unreliable-http-00" category="info">

  <front>
    <title>Unreliable HTTP Payloads</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2020"/>

    <area>General</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document might eventually specify a way to mark messages (or parts of them) for unreliable delivery in HTTP. For now, it just enumerates some design assumptions in <xref target="assumptions"/> to seed discussion.</t>



    </abstract>


    <note title="Note to Readers">


<t><spanx style="emph">RFC EDITOR: please remove this section before publication</spanx></t>

<t>The issues list for this draft can be found at <eref target="https://github.com/mnot/I-D/labels/unreliable-http">https://github.com/mnot/I-D/labels/unreliable-http</eref>.</t>

<t>The most recent (often, unpublished) draft is at <eref target="https://mnot.github.io/I-D/unreliable-http/">https://mnot.github.io/I-D/unreliable-http/</eref>.</t>

<t>Recent changes are listed at <eref target="https://github.com/mnot/I-D/commits/gh-pages/unreliable-http">https://github.com/mnot/I-D/commits/gh-pages/unreliable-http</eref>.</t>

<t>See also the draft’s current status in the IETF datatracker, at
<eref target="https://datatracker.ietf.org/doc/draft-nottingham-unreliable-http/">https://datatracker.ietf.org/doc/draft-nottingham-unreliable-http/</eref>.</t>


    </note>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Some HTTP applications might benefit from being able to tell the protocol that delivery of data need not be reliable; that is, rather than offering guaranteed end-to-end transmission of the entire message payload, it is preferable to forgo this, because the retransmission of lost data is harmful (or just not useful).</t>

<t>For example, in some cases retransmission of audio or video data might be counterproductive, because use of the data is time-sensitive, and retransmission of loss only competes with more current data “on the wire.”</t>

<t>This document might eventually specify a way to do this in HTTP. For now, it just enumerates some design assumptions in <xref target="assumptions"/> to seed discussion.</t>

<section anchor="assumptions" title="Design Assumptions">

<t>This document asserts that the following assumptions are necessary for a successful unreliable HTTP mechanism. If you disagree, please discuss on the HTTP WG mailing list, or the issues list above.</t>

<t>An unreliable HTTP delivery mechanism should:</t>

<t><list style="numbers">
  <t>Allow unreliable delivery both on requests and responses. While the response side is the most obvious target, requests such as POST can support interesting use cases too.</t>
  <t>Focus on unreliable delivery of the message body. Header and trailers need to be reliable.</t>
  <t>Be triggered by an in-protocol mechanism, like a header field or request method. Requiring implementations to have out-of-band knowledge hurts deployment.</t>
  <t>Be able to fall back to “normal” reliable HTTP on hops that don’t support unreliable delivery. This implies that unreliable delivery is an optimisation, not an application semantic.</t>
  <t>Give <spanx style="emph">some</spanx> level of feedback to both ends about whether unreliable delivery is in use, end-to-end. Probably also optional loss stats, hop-by-hop. This might be through a header like <xref target="I-D.ietf-httpbis-proxy-status"/>.</t>
  <t>Provide some way to guarantee that application data is delimited at certain boundaries, to add application loss handling. This might be just a convention that DATAGRAM frames are never combined or split, or it might be something in-protocol.</t>
  <t>Provide out-of-order delivery by default. If an application wants in-order delivery, it will need
to define sequence numbers in payloads and then buffer when receiving. TODO: discuss whether optional in-order is useful.</t>
</list></t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
<section anchor="some-protocol-mechanism" title="Some Protocol Mechanism">

<t>TBD.</t>

</section>
</section>
<section anchor="security-considerations" title="Security Considerations">

<t>Eventually.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.ietf-httpbis-proxy-status">
<front>
<title>The Proxy-Status HTTP Response Header Field</title>

<author initials='M' surname='Nottingham' fullname='Mark Nottingham'>
    <organization />
</author>

<author initials='P' surname='Sikora' fullname='Piotr Sikora'>
    <organization />
</author>

<date month='March' day='1' year='2020' />

<abstract><t>This document defines the Proxy-Status HTTP header field to convey the details of intermediary handling of responses, including generated errors.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-httpbis-proxy-status-01' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-httpbis-proxy-status-01.txt' />
</reference>




    </references>



  </back>

<!-- ##markdown-source:
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
0Yzsv5wWNwVKDwAA

-->

</rfc>

