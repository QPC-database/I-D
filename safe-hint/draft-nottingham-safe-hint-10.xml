<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.10 -->

<!DOCTYPE rfc SYSTEM "../Tools/rfcbootstrap/rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc tocdepth="1"?>

<rfc ipr="trust200902" docName="draft-nottingham-safe-hint-09" category="info">

  <front>
    <title abbrev="Preference for Safe Browsing">The "safe" HTTP Preference</title>

    <author initials="M." surname="Nottingham" fullname="Mark Nottingham">
      <organization></organization>
      <address>
        <email>mnot@mnot.net</email>
        <uri>https://www.mnot.net/</uri>
      </address>
    </author>

    <date year="2019"/>

    <area>General</area>
    
    <keyword>safe</keyword> <keyword>preference</keyword> <keyword>child-protection</keyword>

    <abstract>


<t>This specification defines a “safe” preference for HTTP requests that expresses a desire to avoid
objectionable content, according to the definition of that term by the origin server.</t>

<t>Support for this preference by clients and servers is optional.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Many Web sites have a “safe” mode, to assist those who don’t want to be exposed (or have their
children exposed) to content to which they might object.</t>

<t>However, that goal is often difficult to achieve, because of the need to go to every Web site that
might be used, navigate to the appropriate page (possibly creating an account along the way) to get
a cookie <xref target="RFC6265"/> set in the browser, for each browser on every device used.</t>

<t>A more manageable approach is for the browser to proactively indicate a preference for safe
content. A user agent that supports doing so (whether it be an individual browser, or through an
Operating System HTTP library) need only be configured once to assure that the preference is
advertised to a set of sites, or even all sites.</t>

<t>This specification defines how to declare this desire in requests as a HTTP Preference <xref target="RFC7240"/>.</t>

<t>Note that this specification does not define what content might be considered objectionable, and so
the concept of “safe” is also not precisely defined. Rather, the term is interpreted by the server
and within the scope of each Web site that chooses to act upon this information.</t>

<t>That said, the intent of “safe” is to allow end users (or those acting on their behalf) to express
a desire to avoid content that is considered objectionable within the cultural context of that
site; usually (but not always) content that is unsuitable for minors. The “safe” preference is not
intended to be used for other purposes.</t>

<t>Furthermore, sending “safe” does not guarantee that the Web site will use it, nor that it will
apply a concept of “objectionable” that is consistent with the requester’s views. As such, its
effect can be described as “best effort,” and not to be relied upon. In other words, sending the
preference is no more reliable than going to each Web site and manually selecting a “safe” mode,
but it is considerably easier.</t>

<t>It is also important to note that the “safe” preference is not a reliable indicator that the end
user is a child; other users might have a desire for unobjectionable content, and some children
might browse without the preference being set.</t>

<t>Note also that the cultural context applies to the hosting location of a site, the content
provider, and the source of the content. It cannot be guaranteed that a user-agent and origin
server will have the same view of the concept of what is objectionable.</t>

<t>Simply put, it is a statement by (or on behalf of) the end user to the effect “If your site has a
‘safe’ setting, this user is hereby opting into that, according to your definition of the term.”</t>

<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”,
“RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as
shown here.</t>

</section>
</section>
<section anchor="safe" title="The “safe” Preference">

<t>When present in a request, the “safe” preference indicates that the user prefers that the origin
server to not respond with content which is designated as objectionable, according to the origin
server’s definition of the concept.</t>

<t>For example, a request that includes the “safe” preference:</t>

<figure><artwork><![CDATA[
GET /foo.html HTTP/1.1
Host: www.example.org
User-Agent: ExampleBrowser/1.0
Prefer: safe
]]></artwork></figure>

<t>Typically, user agents that emit the “safe” preference will include it in all requests with the
“https” URI scheme, although some might expose finer-grained controls over when it is sent; this
ensures that the preference is available to the applicable resources. User agents MUST NOT emit the
“safe” preference on requests with the “http” URI scheme (see <xref target="security"/>). See <xref target="browsers"/> for
more information about configuring the set of resources “safe” is sent to.</t>

<t>Safe MAY be implemented in common HTTP libraries (e.g., an operating system might choose to insert
the preference in requests based upon system-wide configuration).</t>

<t>Origin servers that utilize the “safe” preference ought to document that they do so, along with the
criteria that they use to denote objectionable content. If a server has more fine-grained degrees
of “safety”, it SHOULD select a reasonable default to use, and document that; it MAY use additional
mechanisms (e.g., cookies <xref target="RFC6265"/>) to fine-tune.</t>

<t>A response corresponding to the request above might have headers that look like this:</t>

<figure><artwork><![CDATA[
HTTP/1.1 200 OK
Transfer-Encoding: chunked
Content-Type: text/html
Preference-Applied: safe
Server: ExampleServer/2.0
Vary: Prefer
]]></artwork></figure>

<t>Here, the Preference-Applied response header (<xref target="RFC7240"/>) indicates that the site has applied the
preference. Servers are not required to send Preference-Applied (even when they have applied the
preference), but are encouraged to where possible.</t>

<t>Note that the Vary response header needs to be sent if the response is cacheable and might change
depending on the value of the “Prefer” header. This is not only true for those responses that are
“safe”, but also the default “unsafe” response.</t>

<t>See <xref target="RFC7234"/> Section 4.1 for more information the interaction between Vary and Web caching.</t>

<t>See <xref target="servers"/> for additional advice specific to Web servers wishing to use “safe”.</t>

</section>
<section anchor="implementation-status" title="Implementation Status">

<t><spanx style="emph">Note to RFC Editor: Please remove this section before publication.</spanx></t>

<t>This section records the status of known implementations of the protocol defined by this
specification at the time of posting of this Internet-Draft. Please note that the listing of any
individual implementation here does not imply endorsement by the IETF. Furthermore, no effort has
been spent to verify the information presented here that was supplied by IETF contributors. This is
not intended as, and must not be construed to be, a catalog of available implementations or their
features. Readers are advised to note that other implementations may exist.</t>

<t><list style="symbols">
  <t>Microsoft Internet Explorer - see https://support.microsoft.com/en-hk/help/2980016/</t>
  <t>Microsoft Bing - see https://developer.microsoft.com/en-us/microsoft-edge/testdrive/demos/familysearch/</t>
  <t>Mozilla Firefox - see https://support.mozilla.org/en-US/kb/block-and-unblock-websites-parental-controls-firef</t>
  <t>Cisco - see http://blogs.cisco.com/security/filtering-explicit-content</t>
</list></t>

</section>
<section anchor="security" title="Security Considerations">

<t>The “safe” preference is not a secure mechanism; it can be inserted or removed by intermediaries
with access to the request stream (e.g. for “http” URLs). Therefore, it is prohibited from being
included in requests with the “http” scheme.</t>

<t>Its presence reveals limited information about the user, which may be of small assistance in
“fingerprinting” the user by sites. Therefore, user agents SHOULD NOT include it in requests when
the user has expressed a desire to avoid such attacks (e.g., some forms of “private mode” browsing).</t>

<t>By its nature, including “safe” in requests does not assure that all content will actually be safe;
it is only when servers elect to honor it that content might be “safe”.</t>

<t>Even then, a malicious server might adapt content so that it is even less “safe” (by some
definition of the word). As such, this mechanism on its own is not enough to assure that only
“safe” content is seen; those who wish to ensure that will need to combine its use with other
techniques (e.g., content filtering).</t>

<t>Furthermore, the server and user may have differing ideas regarding the semantics of “safe.” As
such, the “safety” of the user’s experience when browsing from site to site as well as over time
might (and probably will) change.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This specification registers the following entry in the “HTTP Preferences” registry <xref target="RFC7240"/>:</t>

<t><list style="symbols">
  <t>Preference: safe</t>
  <t>Value: (no value)</t>
  <t>Description: Indicates that “safe” / “unobjectionable” content is preferred.</t>
  <t>Reference: (this document)</t>
  <t>Notes:</t>
</list></t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC7240" target='https://www.rfc-editor.org/info/rfc7240'>
<front>
<title>Prefer Header for HTTP</title>
<author initials='J.' surname='Snell' fullname='J. Snell'><organization /></author>
<date year='2014' month='June' />
<abstract><t>This specification defines an HTTP header field that can be used by a client to request that certain behaviors be employed by a server while processing a request.</t></abstract>
</front>
<seriesInfo name='RFC' value='7240'/>
<seriesInfo name='DOI' value='10.17487/RFC7240'/>
</reference>



<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference  anchor="RFC7234" target='https://www.rfc-editor.org/info/rfc7234'>
<front>
<title>Hypertext Transfer Protocol (HTTP/1.1): Caching</title>
<author initials='R.' surname='Fielding' fullname='R. Fielding' role='editor'><organization /></author>
<author initials='M.' surname='Nottingham' fullname='M. Nottingham' role='editor'><organization /></author>
<author initials='J.' surname='Reschke' fullname='J. Reschke' role='editor'><organization /></author>
<date year='2014' month='June' />
<abstract><t>The Hypertext Transfer Protocol (HTTP) is a stateless \%application- level protocol for distributed, collaborative, hypertext information systems.  This document defines HTTP caches and the associated header fields that control cache behavior or indicate cacheable response messages.</t></abstract>
</front>
<seriesInfo name='RFC' value='7234'/>
<seriesInfo name='DOI' value='10.17487/RFC7234'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC6265" target='https://www.rfc-editor.org/info/rfc6265'>
<front>
<title>HTTP State Management Mechanism</title>
<author initials='A.' surname='Barth' fullname='A. Barth'><organization /></author>
<date year='2011' month='April' />
<abstract><t>This document defines the HTTP Cookie and Set-Cookie header fields. These header fields can be used by HTTP servers to store state (called cookies) at HTTP user agents, letting the servers maintain a stateful session over the mostly stateless HTTP protocol.  Although cookies have many historical infelicities that degrade their security and privacy, the Cookie and Set-Cookie header fields are widely used on the Internet.  This document obsoletes RFC 2965.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6265'/>
<seriesInfo name='DOI' value='10.17487/RFC6265'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>Thanks to Alissa Cooper, Ilya Grigorik, Emma Llanso, Jeff Hughes, Lorrie Cranor, Doug Turner and
Dave Crocker for their comments.</t>

</section>
<section anchor="browsers" title="Sending “safe” from Web Browsers">

<t>As discussed in <xref target="safe"/>, there are many possible ways for the “safe” preference to be generated.
One possibility is for a Web browser to allow its users to configure the preference to be sent.</t>

<t>When doing so, it is important not to misrepresent the preference as binding to Web sites. For
example, an appropriate setting might be a checkbox with wording such as:</t>

<figure><artwork><![CDATA[
  [] Request "safe" content from Web sites
]]></artwork></figure>

<t>… along with further information available upon request.</t>

<t>Browsers might also allow the “safe” preference to be “locked” – that is, prevent modification
without administrative access, or a passcode.</t>

<t>Note that this specification does not require browsers to send “safe” on all requests, although
that is one possible implementation; e.g., alternate implementation strategies include blacklists
and whitelists.</t>

</section>
<section anchor="servers" title="Supporting “safe” on Web Sites">

<t>Web sites that allow configuration of a “safe” mode (for example, using a cookie) can add support
for the “safe” preference incrementally; since the preference will not be supported by all clients
immediately, it is necessary to have another way to configure it.</t>

<t>When honoring the safe preference, it is important that it not be possible to disable it through
the Web site’s interface, since “safe” may be configured and locked down by the browser or
computer’s administrator (e.g., a parent). If the site has such a means of configuration (e.g.,
stored user preferences) and the safe preference is received in a request, the “safer”
interpretation ought to be used.</t>

<t>The appropriate level of “safety” is a site-specific decision. When selecting it, sites ought to
bear in mind that disabling the preference might be considerably more onerous than through other
means, especially if the preference is generated based upon Operating System configuration.</t>

<t>Sites might offer different levels of “safeness” through Web configuration, they will need to
either inform their users of what level the “safe” hint corresponds to, or provide them with some
means of adjusting it.</t>

<t>If the user expresses a wish to disable “safe” mode, the site can remind them that the safe
preference is being sent, and ask them to consult their administrator (since “safe” might be set by
a locked-down Operating System configuration).</t>

<t>As explained in <xref target="safe"/>, responses that change based upon the presence of the “safe” preference
need to either carry the “Vary: Prefer” response header field, or be uncacheable by shared caches
(e.g., with a “Cache-Control: private” response header field). This is to avoid an unsafe cached
response being served to a client that prefers safe content (or vice versa).</t>

</section>


  </back>

<!-- ##markdown-source:
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
7gwaAwQtAAA=

-->

</rfc>

